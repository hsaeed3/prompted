[project]
name = "prompted"
version = "0.0.13"
description = "ðŸŒ± prompted - Tiny & Rapid LLM/Agentic Prototyping"
authors = [{ name = "Hammad Saeed", email = "hvmmad@gmail.com" }]
requires-python = ">=3.10"
dependencies = [
    "docstring-parser>=0.16",
    "pydantic>=2.11.5",
    "rich>=13.9.4",
    "sqlmodel>=0.0.24",
    "typing-inspect>=0.9.0",
]

[project.optional-dependencies]
run = ["litellm>=1.70.2", "instructor>=1.8.2"]
serve = ["uvicorn>=0.34.2", "fastapi>=0.115.12"]

[dependency-groups]
dev = [
    # core dev tools
    # i love astral.sh
    "ruff",
    "uv",
    "rich",
    "twine",
    "pytest",
    "pytest-asyncio",
    "ipykernel",
    "ipython",
    "mcp>=1.9.0",
    "fasta2a",
    "mkdocs-material",
    "mkdocs-material-extensions>=1.3.1",
    "mkdocstrings[python]>=0.25.0",
    "mkdocs-jupyter",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

# -----------------------------------------------------------------------------
# Ruff Rules
# -----------------------------------------------------------------------------

[tool.ruff]
line-length = 90
output-format = "grouped"
target-version = "py37"

[tool.ruff.format]
docstring-code-format = true

[tool.ruff.lint]
select = [
    # isort
    "I",
    # bugbear rules
    "B",
    # remove unused imports
    "F401",
    # bare except statements
    "E722",
    # unused arguments
    "ARG",
    # print statements
    "T201",
    "T203",
    # misuse of typing.TYPE_CHECKING
    "TC004",
    # import rules
    "TID251",
]
ignore = [
    # mutable defaults
    "B006",
]
unfixable = [
    # disable auto fix for print statements
    "T201",
    "T203",
]

[tool.ruff.lint.flake8-tidy-imports.banned-api]
"functools.lru_cache".msg = "This function does not retain type information for the wrapped function's arguments; The `lru_cache` function from `_utils` should be used instead"

[tool.ruff.lint.isort]
length-sort = true
length-sort-straight = true
combine-as-imports = true
extra-standard-library = ["typing_extensions"]
known-first-party = ["openai", "tests"]

[tool.ruff.lint.per-file-ignores]
"bin/**.py" = ["T201", "T203"]
"scripts/**.py" = ["T201", "T203"]
"tests/**.py" = ["T201", "T203"]
"examples/**.py" = ["T201", "T203"]

[tool.pyright]
venvPath = "."
venv = ".venv"
